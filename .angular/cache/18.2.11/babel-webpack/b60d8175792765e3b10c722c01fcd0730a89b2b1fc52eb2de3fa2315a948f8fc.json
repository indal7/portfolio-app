{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../toaster.service\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = (a0, a1, a2, a3) => ({\n  \"badge-success\": a0,\n  \"badge-danger\": a1,\n  \"badge-complete\": a2,\n  \"badge-cancelled\": a3\n});\nfunction ProjectsListComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 4)(1, \"div\", 5)(2, \"h3\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"a\", 6);\n    i0.ɵɵtext(7, \"View Project\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"p\")(9, \"strong\");\n    i0.ɵɵtext(10, \"ID:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"span\", 7);\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"p\")(15, \"strong\");\n    i0.ɵɵtext(16, \"Updated On:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17);\n    i0.ɵɵpipe(18, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 8)(20, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function ProjectsListComponent_li_4_Template_button_click_20_listener() {\n      const project_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.updateProject(project_r2));\n    });\n    i0.ɵɵtext(21, \"Update\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function ProjectsListComponent_li_4_Template_button_click_22_listener() {\n      const project_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteProject(project_r2.id));\n    });\n    i0.ɵɵtext(23, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const project_r2 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(project_r2.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(project_r2.description);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"href\", project_r2.link, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", project_r2.id, \"\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction4(10, _c0, project_r2.project_status === \"Ongoing\", project_r2.project_status === \"On Hold\", project_r2.project_status === \"Completed\", project_r2.project_status === \"Cancelled\"));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", project_r2.project_status, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(18, 7, project_r2.updated_on, \"MMMM d, y, h:mm a\"), \"\");\n  }\n}\nexport let ProjectsListComponent = /*#__PURE__*/(() => {\n  class ProjectsListComponent {\n    constructor(http, router, toasterService) {\n      this.http = http;\n      this.router = router;\n      this.toasterService = toasterService;\n      this.projects = [];\n      this.apiUrl = environment.apiUrl;\n    }\n    ngOnInit() {\n      this.getProjects();\n    }\n    getProjects() {\n      const email = localStorage.getItem('userEmail');\n      let params = new HttpParams();\n      if (email) {\n        params = params.set('email', email);\n      }\n      this.http.get(`${this.apiUrl}/projects`, {\n        params\n      }).subscribe(response => {\n        if (response.success) {\n          this.projects = response.data || [];\n          this.toasterService.success('Projects loaded successfully!');\n        } else {\n          this.toasterService.error(response.message || 'Error fetching projects.');\n        }\n      }, error => {\n        console.error('Error fetching projects:', error);\n        this.toasterService.error('Failed to load projects. Please try again.');\n      });\n    }\n    updateProject(project) {\n      this.router.navigate(['edit-project', project.id]);\n    }\n    deleteProject(id) {\n      const email = localStorage.getItem('userEmail');\n      if (!email) {\n        this.toasterService.error('Email is missing');\n        return;\n      }\n      let params = new HttpParams().set('email', email);\n      this.http.delete(`${this.apiUrl}/projects/${id}`, {\n        params\n      }).subscribe(response => {\n        if (response.success) {\n          this.toasterService.success('Project deleted successfully!');\n          this.getProjects(); // Refresh list after deleting\n        } else {\n          this.toasterService.error(response.message || 'Error deleting project.');\n        }\n      }, error => {\n        console.error('Error deleting project:', error);\n        this.toasterService.error('Failed to delete project. Please try again.');\n      });\n    }\n    addMoreProject() {\n      this.router.navigate(['/create-project']);\n    }\n    static #_ = (() => this.ɵfac = function ProjectsListComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ProjectsListComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.ToasterService));\n    })();\n    static #_2 = (() => this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ProjectsListComponent,\n      selectors: [[\"app-projects-list\"]],\n      inputs: {\n        projects: \"projects\"\n      },\n      decls: 7,\n      vars: 1,\n      consts: [[1, \"projects-container\"], [1, \"projects-list\"], [\"class\", \"project-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"add-more-project\", 3, \"click\"], [1, \"project-item\"], [1, \"project-main-info\"], [\"target\", \"_blank\", \"rel\", \"noopener noreferrer\", 1, \"project-link\", 3, \"href\"], [1, \"badge\", 3, \"ngClass\"], [1, \"project-actions\"], [1, \"update-button\", 3, \"click\"], [1, \"delete-button\", 3, \"click\"]],\n      template: function ProjectsListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Projects List\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"ul\", 1);\n          i0.ɵɵtemplate(4, ProjectsListComponent_li_4_Template, 24, 15, \"li\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function ProjectsListComponent_Template_button_click_5_listener() {\n            return ctx.addMoreProject();\n          });\n          i0.ɵɵtext(6, \"Add More Project\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngForOf\", ctx.projects);\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgForOf, i4.DatePipe],\n      styles: [\".projects-container[_ngcontent-%COMP%]{max-width:800px;margin:0 auto;padding:20px;font-family:Arial,sans-serif}.projects-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{text-align:center;color:#333;margin-bottom:20px}.projects-list[_ngcontent-%COMP%]{list-style:none;padding:0}.project-item[_ngcontent-%COMP%]{border:1px solid #ddd;border-radius:8px;padding:15px;margin-bottom:20px;box-shadow:0 4px 8px #0000001a;background-color:#f9f9f9;transition:transform .2s ease}.project-item[_ngcontent-%COMP%]:hover{transform:scale(1.02)}.project-main-info[_ngcontent-%COMP%]{margin-bottom:10px}.project-main-info[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-size:20px;color:#007bff;margin:0}.project-main-info[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:5px 0;color:#555}.project-link[_ngcontent-%COMP%]{color:#007bff;text-decoration:none;font-size:14px}.project-link[_ngcontent-%COMP%]:hover{text-decoration:underline}.project-details[_ngcontent-%COMP%]{font-size:14px;color:#666;margin:10px 0}.project-details[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:3px 0}.project-actions[_ngcontent-%COMP%]{display:flex;gap:10px;margin-top:10px}.update-button[_ngcontent-%COMP%], .delete-button[_ngcontent-%COMP%]{padding:8px 12px;font-size:14px;border-radius:4px;border:none;cursor:pointer;transition:background-color .3s ease}.update-button[_ngcontent-%COMP%]{background-color:#007bff;color:#fff}.update-button[_ngcontent-%COMP%]:hover{background-color:#0056b3}.delete-button[_ngcontent-%COMP%]{background-color:#d9534f;color:#fff}.delete-button[_ngcontent-%COMP%]:hover{background-color:#c9302c}@media (max-width: 600px){.project-actions[_ngcontent-%COMP%]{flex-direction:column;gap:8px}.project-item[_ngcontent-%COMP%]{padding:10px}.project-main-info[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-size:18px}.project-link[_ngcontent-%COMP%], .project-details[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:13px}.update-button[_ngcontent-%COMP%], .delete-button[_ngcontent-%COMP%]{padding:6px 10px;font-size:13px}}.add-more-project[_ngcontent-%COMP%]{background-color:#28a745;color:#fff;margin-top:20px;width:100%;padding:10px}.project-details[_ngcontent-%COMP%]{background-color:#f9f9f9;border:1px solid #ddd;border-radius:5px;padding:15px;margin:10px 0;box-shadow:0 2px 4px #0000001a}.project-details[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:5px 0;font-size:16px}.project-details[_ngcontent-%COMP%]   strong[_ngcontent-%COMP%]{color:#333}.badge[_ngcontent-%COMP%]{display:inline-block;padding:.5rem 1rem;border-radius:1rem;font-weight:700;color:#fff;text-align:center;margin:.5rem 0;transition:background-color .3s ease}.badge-success[_ngcontent-%COMP%]{background-color:#28a745}.badge-danger[_ngcontent-%COMP%]{background-color:#dc3545}.badge-complete[_ngcontent-%COMP%]{background-color:#007bff}.badge-cancelled[_ngcontent-%COMP%]{background-color:#6c757d}\"]\n    }))();\n  }\n  return ProjectsListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}