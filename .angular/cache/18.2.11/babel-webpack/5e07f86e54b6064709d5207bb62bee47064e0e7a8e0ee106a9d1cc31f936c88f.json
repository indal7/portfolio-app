{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http) {\n      this.http = http;\n      this.authStatusSubject = new BehaviorSubject(this.isLoggedIn());\n      this.authStatus$ = this.authStatusSubject.asObservable();\n    }\n    login(data) {\n      return this.http.post(`${environment.apiUrl}/login`, data).pipe(tap(response => {\n        if (response.success && response.message.token) {\n          localStorage.setItem('authToken', response.message.token);\n          localStorage.setItem('userEmail', data.email);\n          this.authStatusSubject.next(true); // Notify all subscribers about the login status\n        }\n      }));\n    }\n    requestPasswordReset(data) {\n      return this.http.post(`${environment.apiUrl}/request_password_reset`, data);\n    }\n    logout() {\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('userEmail');\n      this.authStatusSubject.next(false); // Notify all subscribers about the logout status\n    }\n    isLoggedIn() {\n      return !!localStorage.getItem('authToken');\n    }\n    getUserInfo() {\n      return {\n        email: localStorage.getItem('userEmail'),\n        token: localStorage.getItem('authToken')\n      };\n    }\n    static #_ = (() => this.ɵfac = function AuthService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AuthService)(i0.ɵɵinject(i1.HttpClient));\n    })();\n    static #_2 = (() => this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    }))();\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}