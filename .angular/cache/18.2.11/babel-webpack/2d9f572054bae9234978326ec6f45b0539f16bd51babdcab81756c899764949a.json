{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nlet ManageUsersComponent = class ManageUsersComponent {\n  constructor(http, toasterService) {\n    this.http = http;\n    this.toasterService = toasterService;\n    this.users = [];\n    this.apiUrl = environment.apiUrl;\n  }\n  ngOnInit() {\n    this.getUsers();\n  }\n  getUsers() {\n    this.http.get(`${this.apiUrl}/fetch_all_users`).subscribe(response => {\n      if (response.success) {\n        // Initialize users with roleChanged and originalRole properties\n        this.users = response.message.users.map(user => ({\n          ...user,\n          originalRole: user.role,\n          // Store original role\n          roleChanged: false // Set default to false\n        })) || [];\n        this.toasterService.success('Users loaded successfully!');\n      } else {\n        this.toasterService.error(response.message || 'Error fetching users.');\n      }\n    }, error => {\n      console.error('Error fetching users:', error);\n      this.toasterService.error('Failed to load users. Please try again.');\n    });\n  }\n  updateUserRole(userEmail, newRole) {\n    this.http.put(`${this.apiUrl}/update_user_role`, {\n      role: newRole,\n      email: userEmail\n    }).subscribe(response => {\n      if (response.success) {\n        this.toasterService.success('User role updated successfully!');\n        this.getUsers(); // Refresh the user list to reflect changes\n      } else {\n        this.toasterService.error(response.message || 'Error updating user role.');\n      }\n    }, error => {\n      console.error('Error updating user role:', error);\n      this.toasterService.error('Failed to update user role. Please try again.');\n    });\n  }\n  // Method to handle the role change\n  onRoleChange(user) {\n    user.roleChanged = user.role !== user.originalRole; // Set flag based on comparison\n  }\n};\nManageUsersComponent = __decorate([Component({\n  selector: 'app-manage-users',\n  templateUrl: './manage-users.component.html',\n  styleUrls: ['./manage-users.component.css']\n})], ManageUsersComponent);\nexport { ManageUsersComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}