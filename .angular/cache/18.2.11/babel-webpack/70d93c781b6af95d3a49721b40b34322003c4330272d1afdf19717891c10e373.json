{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor() {\n      this.authStatusSubject = new BehaviorSubject(false); // Tracks auth state\n      this.authStatus$ = this.authStatusSubject.asObservable();\n      this.checkTokenOnLoad();\n    }\n    checkTokenOnLoad() {\n      const token = localStorage.getItem('authToken');\n      this.authStatusSubject.next(!!token); // Update status based on token presence\n    }\n    login(token) {\n      localStorage.setItem('authToken', token);\n      this.authStatusSubject.next(true); // Set auth status to true on login\n    }\n    logout() {\n      localStorage.removeItem('authToken');\n      this.authStatusSubject.next(false);\n    }\n    isLoggedIn() {\n      return !!localStorage.getItem('authToken');\n    }\n    static #_ = (() => this.ɵfac = function AuthService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AuthService)();\n    })();\n    static #_2 = (() => this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    }))();\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}