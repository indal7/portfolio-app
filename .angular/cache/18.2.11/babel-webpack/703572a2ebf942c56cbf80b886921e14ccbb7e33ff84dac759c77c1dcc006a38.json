{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../toaster.service\";\nimport * as i3 from \"../auth.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction LoginComponent_form_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 6);\n    i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_form_3_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.login());\n    });\n    i0.ɵɵelementStart(1, \"label\", 7);\n    i0.ɵɵtext(2, \"Email:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 8);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_form_3_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.email, $event) || (ctx_r1.email = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"label\", 9);\n    i0.ɵɵtext(5, \"Password:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"input\", 10);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_form_3_Template_input_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.password, $event) || (ctx_r1.password = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 11);\n    i0.ɵɵtext(8, \"Login\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.email);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.password);\n  }\n}\nfunction LoginComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.errorMessage);\n  }\n}\nfunction LoginComponent_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function LoginComponent_button_7_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.togglePasswordReset());\n    });\n    i0.ɵɵtext(1, \"Forgot Password?\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_8_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.resetMessage);\n  }\n}\nfunction LoginComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"h3\");\n    i0.ɵɵtext(2, \"Reset Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"label\", 14);\n    i0.ɵɵtext(4, \"Enter your email:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"input\", 15);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_div_8_Template_input_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.resetEmail, $event) || (ctx_r1.resetEmail = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function LoginComponent_div_8_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.requestPasswordReset());\n    });\n    i0.ɵɵtext(7, \"Send Reset Link\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, LoginComponent_div_8_div_8_Template, 2, 1, \"div\", 16);\n    i0.ɵɵelementStart(9, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function LoginComponent_div_8_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.togglePasswordReset());\n    });\n    i0.ɵɵtext(10, \"Back to Login\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.resetEmail);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.resetMessage);\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(router, toasterService, authService, cdr) {\n      this.router = router;\n      this.toasterService = toasterService;\n      this.authService = authService;\n      this.cdr = cdr;\n      this.email = '';\n      this.password = '';\n      this.resetEmail = '';\n      this.errorMessage = '';\n      this.resetMessage = '';\n      this.apiUrl = environment.apiUrl;\n      this.showPasswordReset = false; // Toggle state for password reset\n    }\n    // Method for handling login functionality\n    login() {\n      const loginData = {\n        email: this.email,\n        password: this.password\n      };\n      this.authService.login(loginData).subscribe(response => {\n        if (response.success) {\n          this.toasterService.success('Login successful!');\n          this.router.navigate(['/projects-list']);\n        } else {\n          this.toasterService.error('Login failed. No token received.');\n        }\n      }, error => {\n        console.error('Login error:', error);\n        this.toasterService.error('Login failed. Please try again.');\n      });\n    }\n    // Navigation method to go to the register page\n    goToRegister() {\n      this.router.navigate(['/register']);\n    }\n    togglePasswordReset() {\n      this.showPasswordReset = !this.showPasswordReset;\n      this.resetMessage = null; // Clear reset message when toggling\n    }\n    // Method for handling password reset request\n    requestPasswordReset() {\n      if (!this.resetEmail) {\n        this.toasterService.error('Please enter your email address.');\n        return;\n      }\n      const resetData = {\n        email: this.resetEmail\n      };\n      this.authService.requestPasswordReset(resetData).subscribe(response => {\n        if (response.success) {\n          this.resetMessage = 'Password reset link has been sent to your email!';\n          this.toasterService.success(this.resetMessage);\n        } else {\n          this.resetMessage = response.message;\n          this.toasterService.error(this.resetMessage);\n        }\n      }, error => {\n        console.error('Password reset error:', error);\n        this.toasterService.error('Failed to send password reset link. Please try again.');\n      });\n    }\n    static #_ = (() => this.ɵfac = function LoginComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ToasterService), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    })();\n    static #_2 = (() => this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 9,\n      vars: 4,\n      consts: [[1, \"login-container\"], [3, \"ngSubmit\", 4, \"ngIf\"], [\"class\", \"error\", 4, \"ngIf\"], [\"type\", \"button\", 3, \"click\"], [\"type\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"password-reset\", 4, \"ngIf\"], [3, \"ngSubmit\"], [\"for\", \"email\"], [\"id\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"password\"], [\"id\", \"password\", \"type\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\"], [1, \"error\"], [1, \"password-reset\"], [\"for\", \"resetEmail\"], [\"id\", \"resetEmail\", \"name\", \"resetEmail\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"class\", \"message\", 4, \"ngIf\"], [1, \"message\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(3, LoginComponent_form_3_Template, 9, 2, \"form\", 1)(4, LoginComponent_div_4_Template, 2, 1, \"div\", 2);\n          i0.ɵɵelementStart(5, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_5_listener() {\n            return ctx.goToRegister();\n          });\n          i0.ɵɵtext(6, \"Don't have an account? Register here\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(7, LoginComponent_button_7_Template, 2, 0, \"button\", 4)(8, LoginComponent_div_8_Template, 11, 2, \"div\", 5);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", !ctx.showPasswordReset);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", !ctx.showPasswordReset);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.showPasswordReset);\n        }\n      },\n      dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm],\n      styles: [\".login-container[_ngcontent-%COMP%]{max-width:400px;margin:5% auto;padding:20px;border:1px solid #ddd;border-radius:8px;box-shadow:0 4px 8px #0000001a;background-color:#f9f9f9;font-family:Arial,sans-serif}.login-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{text-align:center;color:#333;font-size:24px}.login-container[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{display:block;margin-bottom:5px;color:#555}.login-container[_ngcontent-%COMP%]   input[type=email][_ngcontent-%COMP%], .login-container[_ngcontent-%COMP%]   input[type=password][_ngcontent-%COMP%]{width:100%;padding:10px;margin-bottom:15px;border:1px solid #ccc;border-radius:4px;font-size:16px;box-sizing:border-box}.login-container[_ngcontent-%COMP%]   input[type=email][_ngcontent-%COMP%]:focus, .login-container[_ngcontent-%COMP%]   input[type=password][_ngcontent-%COMP%]:focus{border-color:#007bff;outline:none;box-shadow:0 0 5px #007bff4d}.login-container[_ngcontent-%COMP%]   button[type=submit][_ngcontent-%COMP%]{width:100%;padding:10px;background-color:#007bff;color:#fff;border:none;border-radius:4px;font-size:16px;cursor:pointer;transition:background-color .3s ease}.login-container[_ngcontent-%COMP%]   button[type=submit][_ngcontent-%COMP%]:hover{background-color:#0056b3}button[type=button][_ngcontent-%COMP%]{display:block;margin:10px auto;background:none;color:#007bff;border:none;font-size:14px;cursor:pointer}button[type=button][_ngcontent-%COMP%]:hover{color:#0056b3;text-decoration:underline}.error[_ngcontent-%COMP%]{color:#d9534f;font-size:14px;margin-top:10px;text-align:center}.password-reset[_ngcontent-%COMP%]{opacity:0;transition:opacity .5s ease}.password-reset.ng-enter[_ngcontent-%COMP%]{opacity:1}.hidden[_ngcontent-%COMP%]{display:none}\"]\n    }))();\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}