{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport jwtDecode from 'jwt-decode';\nimport * as i0 from \"@angular/core\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor() {\n      // Private subject to track authentication status\n      this.authStatusSubject = new BehaviorSubject(false);\n      // Public observable to allow components to subscribe to auth status changes\n      this.authStatus$ = this.authStatusSubject.asObservable();\n    }\n    // Method to log in the user\n    login(token) {\n      localStorage.setItem('authToken', token);\n      this.userInfo = this.getUserInfo(); // Decode and fetch user info from the token\n      this.authStatusSubject.next(true); // Emit that the user is logged in\n    }\n    // Method to log out the user\n    logout() {\n      localStorage.removeItem('authToken');\n      this.userInfo = null;\n      this.authStatusSubject.next(false); // Emit that the user is logged out\n    }\n    // Method to get user info\n    getUserInfo() {\n      const token = localStorage.getItem('authToken');\n      if (token) {\n        return jwtDecode(token); // Adjust according to your token structure\n      }\n      return null;\n    }\n    static #_ = (() => this.ɵfac = function AuthService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AuthService)();\n    })();\n    static #_2 = (() => this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    }))();\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}