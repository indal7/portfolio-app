{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../toaster.service\";\nimport * as i4 from \"@angular/forms\";\nexport let CreateProjectComponent = /*#__PURE__*/(() => {\n  class CreateProjectComponent {\n    constructor(http, router, toasterService) {\n      this.http = http;\n      this.router = router;\n      this.toasterService = toasterService;\n      this.newProject = {\n        id: '',\n        title: '',\n        description: '',\n        link: '',\n        technologies: '',\n        dateCompleted: '',\n        projectStatus: '',\n        email: '',\n        resumeFile: null\n      };\n      this.apiUrl = environment.apiUrl;\n      this.projectCreated = new EventEmitter();\n    }\n    addProject() {\n      if (!this.newProject.title || !this.newProject.description || !this.newProject.link || !this.newProject.technologies || !this.newProject.dateCompleted || !this.newProject.projectStatus) {\n        console.error('Missing required fields.');\n        return;\n      }\n      const payload = {\n        id: Date.now().toString(),\n        title: this.newProject.title,\n        description: this.newProject.description,\n        link: this.newProject.link,\n        technologies: this.newProject.technologies,\n        dateCompleted: this.newProject.dateCompleted,\n        projectStatus: this.newProject.projectStatus,\n        updated_on: new Date().toISOString(),\n        email: localStorage.getItem('userEmail') || ''\n      };\n      this.http.post(`${this.apiUrl}/projects`, payload, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).subscribe(response => {\n        if (response.success) {\n          this.toasterService.success(`Project added successfully: ${response.message}`);\n          console.log('Project added successfully', response);\n          this.router.navigate(['/projects-list']);\n          this.projectCreated.emit();\n          this.resetForm();\n        } else {\n          console.error('Error adding project:', response.message);\n        }\n      }, error => {\n        console.error('Error adding project:', error);\n        this.toasterService.error(`Error adding project: ${error}`);\n      });\n    }\n    resetForm() {\n      this.newProject = {\n        id: '',\n        title: '',\n        description: '',\n        link: '',\n        technologies: '',\n        dateCompleted: '',\n        projectStatus: '',\n        email: '',\n        resumeFile: null\n      };\n    }\n    static #_ = (() => this.ɵfac = function CreateProjectComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CreateProjectComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.ToasterService));\n    })();\n    static #_2 = (() => this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CreateProjectComponent,\n      selectors: [[\"app-create-project\"]],\n      outputs: {\n        projectCreated: \"projectCreated\"\n      },\n      decls: 21,\n      vars: 6,\n      consts: [[3, \"submit\"], [\"type\", \"text\", \"placeholder\", \"Title\", \"name\", \"title\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"text\", \"placeholder\", \"Description\", \"name\", \"description\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"text\", \"placeholder\", \"Link\", \"name\", \"link\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"text\", \"placeholder\", \"Technologies Used\", \"name\", \"technologies\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"date\", \"placeholder\", \"Date Completed\", \"name\", \"dateCompleted\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"name\", \"projectStatus\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"value\", \"\", \"disabled\", \"\", \"selected\", \"\"], [\"value\", \"Ongoing\"], [\"value\", \"Completed\"], [\"value\", \"On Hold\"], [\"type\", \"file\", \"name\", \"resume\", 3, \"change\"], [\"type\", \"submit\"]],\n      template: function CreateProjectComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n          i0.ɵɵtext(2, \"Create New Project\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 0);\n          i0.ɵɵlistener(\"submit\", function CreateProjectComponent_Template_form_submit_3_listener() {\n            return ctx.addProject();\n          });\n          i0.ɵɵelementStart(4, \"input\", 1);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function CreateProjectComponent_Template_input_ngModelChange_4_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.newProject.title, $event) || (ctx.newProject.title = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"input\", 2);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function CreateProjectComponent_Template_input_ngModelChange_5_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.newProject.description, $event) || (ctx.newProject.description = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"input\", 3);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function CreateProjectComponent_Template_input_ngModelChange_6_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.newProject.link, $event) || (ctx.newProject.link = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"input\", 4);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function CreateProjectComponent_Template_input_ngModelChange_7_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.newProject.technologies, $event) || (ctx.newProject.technologies = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"input\", 5);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function CreateProjectComponent_Template_input_ngModelChange_8_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.newProject.dateCompleted, $event) || (ctx.newProject.dateCompleted = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"select\", 6);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function CreateProjectComponent_Template_select_ngModelChange_9_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.newProject.projectStatus, $event) || (ctx.newProject.projectStatus = $event);\n            return $event;\n          });\n          i0.ɵɵelementStart(10, \"option\", 7);\n          i0.ɵɵtext(11, \"Select Project Status\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"option\", 8);\n          i0.ɵɵtext(13, \"Ongoing\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"option\", 9);\n          i0.ɵɵtext(15, \"Completed\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"option\", 10);\n          i0.ɵɵtext(17, \"On Hold\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(18, \"input\", 11);\n          i0.ɵɵlistener(\"change\", function CreateProjectComponent_Template_input_change_18_listener($event) {\n            return ctx.newProject.resumeFile = $event.target.files[0];\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"button\", 12);\n          i0.ɵɵtext(20, \"Add Project\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newProject.title);\n          i0.ɵɵadvance();\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newProject.description);\n          i0.ɵɵadvance();\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newProject.link);\n          i0.ɵɵadvance();\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newProject.technologies);\n          i0.ɵɵadvance();\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newProject.dateCompleted);\n          i0.ɵɵadvance();\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newProject.projectStatus);\n        }\n      },\n      dependencies: [i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n      styles: [\"div[_ngcontent-%COMP%]{max-width:400px;margin:20px auto;padding:20px;border:1px solid #ccc;border-radius:8px;box-shadow:0 4px 8px #0000001a;background-color:#f9f9f9}h2[_ngcontent-%COMP%]{text-align:center;margin-bottom:20px;font-size:24px;color:#333}input[type=text][_ngcontent-%COMP%], input[type=date][_ngcontent-%COMP%], select[_ngcontent-%COMP%]{width:100%;padding:10px;margin:10px 0;border:1px solid #ccc;border-radius:4px;box-sizing:border-box;font-size:16px}input[type=file][_ngcontent-%COMP%]{margin:10px 0}button[_ngcontent-%COMP%]{width:100%;padding:10px;background-color:#4caf50;color:#fff;border:none;border-radius:4px;cursor:pointer;font-size:16px}button[_ngcontent-%COMP%]:hover{background-color:#45a049}@media (max-width: 600px){div[_ngcontent-%COMP%]{width:90%;padding:10px}h2[_ngcontent-%COMP%]{font-size:20px}button[_ngcontent-%COMP%]{font-size:14px}}\"]\n    }))();\n  }\n  return CreateProjectComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}